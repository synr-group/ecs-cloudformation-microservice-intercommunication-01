AWSTemplateFormatVersion: '2010-09-09'
Description: container on ecs cluster
Parameters:
  NetworkStackName:
    Type: String
    Description: The name of the network stack.
  IAMStackName:
    Type: String
    Description: The name of the IAM stack.
  ClusterStackName:
    Type: String
    Description: The name of the cluster stack.


Resources:
  Task:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: atlas
      Cpu: 512
      Memory: 1024 
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: 
        Fn::ImportValue: 
            !Join [':', [ !Ref 'IAMStackName', 'ECSTaskExecutionRole']]
      ContainerDefinitions:
        - Name: producer-service
          Image: synrgroup/producer-service-demo-01:latest
          Environment:
            - Name: testName
              Value: testValue
          Cpu: 512
          Memory: 1024
          PortMappings:
            - ContainerPort: 8081
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: 'projectname-log'
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: 'producer-service'

  PrivateNamespace:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
        Name: projectname.com
        Vpc: 
          Fn::ImportValue: 
            !Join [':', [ !Ref 'NetworkStackName', 'Vpc']]

  DiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties: 
      Description: Discovery Service for the producer Service
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - TTL: 60
            Type: A
          - TTL: 60
            Type: SRV
      HealthCheckCustomConfig: 
        FailureThreshold: 1
      Name: producerservice
      NamespaceId: !Ref PrivateNamespace




  Service:
    Type: AWS::ECS::Service
    DependsOn: ListenerRule
    Properties:
      ServiceName: atlas-service
      TaskDefinition: !Ref Task
      Cluster: 
        Fn::ImportValue: 
          !Join [':',[!Ref 'ClusterStackName','ECSCluster']]
      ServiceRegistries:
        - RegistryArn: !GetAtt DiscoveryService.Arn
          Port: 8081
      LaunchType: FARGATE
      DesiredCount: 1
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 70
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - Fn::ImportValue: !Join [':',[!Ref 'NetworkStackName','Subnet1']] 
            - Fn::ImportValue: !Join [':',[!Ref 'NetworkStackName','Subnet2']] 
          SecurityGroups:
            - Fn::ImportValue: !Join [':',[!Ref 'NetworkStackName','ContainerSecurityGroup']]  
      LoadBalancers:
        - ContainerName: producer-service
          ContainerPort: 8081
          TargetGroupArn: !Ref TargetGroup

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: atlas-tg
      VpcId: 
        Fn::ImportValue: 
          !Join [':',[!Ref 'NetworkStackName','Vpc']]
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /api-docs
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 10
      TargetType: ip

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: 
        Fn::ImportValue: 
          !Join [':',[!Ref 'NetworkStackName','Listener']] 
      Priority: 2
      Conditions:
        - Field: path-pattern
          Values:
            - /api/*
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
